// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String         @id @default(uuid())
  name                   String
  slug                   String
  new                    Boolean        @default(true)
  priceInCents           Int
  description            String
  features               String
  includes               Json[]
  isAvailableForPurchase Boolean        @default(true)
  createdAt              DateTime       @default(now())
  updatedAt              DateTime       @updatedAt
  orders                 Order[]
  productImages          ProductImage[]
  categoryId             Int
  category               Category       @relation(fields: [categoryId], references: [id], onDelete: Restrict)

  // Suggested products relations
  suggestedProducts        SuggestedProducts[] @relation(name: "ProductToSuggested")
  suggestedByOtherProducts SuggestedProducts[] @relation(name: "SuggestedToProduct")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  userId           String
  productId        String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product          Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model ProductImage {
  id         String     @id @default(uuid())
  productId  String
  imageUrl   String
  order      Int
  deviceType DeviceType @default(MOBILE)
  product    Product    @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model SuggestedProducts {
  id                 String @id @default(uuid())
  productId          String
  suggestedProductId String

  product          Product @relation(name: "ProductToSuggested", fields: [productId], references: [id], onDelete: Cascade)
  suggestedProduct Product @relation(name: "SuggestedToProduct", fields: [suggestedProductId], references: [id], onDelete: Restrict)
}

enum DeviceType {
  MOBILE
  TABLET
  DESKTOP
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  label    String
  products Product[]
}
